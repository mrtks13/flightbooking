version: '2'
services:
    # App backend service
    flightbooking-app:
        # Configuration for building the docker image for the backend service
        build:
            context: .  # Use an image built from the specified dockerfile in the `polling-app-server` directory.
            dockerfile: Dockerfile
        ports:
            - "8085:8080" # Forward the exposed port 8085 on the container to port 8080 on the host machine
        expose:
            - 8085
        restart: always
        depends_on:
            - flightbooking-mysql # This service depends on mysql. Start that first.
        environment: # Pass environment variables to the service
            SPRING_DATASOURCE_URL: jdbc:mysql://flightbooking-mysql:3307/flightbookingapp?useSSL=false
            SPRING_DATASOURCE_USERNAME: root
            SPRING_DATASOURCE_PASSWORD: finartz
        networks: # Networks to join (Services on the same network can communicate with each other using their name)
            - finartz-network

    flightbooking-mysql:
        image: mysql:8
        volumes:
            - db-data:/var/lib/mysql
        environment:
            - MYSQL_USER=root
            - MYSQL_ROOT_PASSWORD=finartz
            - MYSQL_DATABASE=flightbookingapp

        ports:
            - 3307:3306
        expose:
            - 3307
        command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp

        networks: # Networks to join (Services on the same network can communicate with each other using their name)
            - finartz-network


# Volumes
volumes:
    db-data:

# Networks to be created to facilitate communication between containers

networks:
    finartz-network:
        driver: bridge